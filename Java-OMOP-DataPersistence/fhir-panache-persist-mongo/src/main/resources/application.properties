kafka.bootstrap.servers=cdp-kafka-cluster-kafka-bootstrap.kafka-for-cdp:9092
# kafka.bootstrap.servers=localhost:9092

# Configure the Kafka sink (we write to it)
mp.messaging.incoming.fhirsvr_allergyintolerance.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_allergyintolerance.topic=fhirsvr_allergyintolerance
mp.messaging.incoming.fhirsvr_allergyintolerance.value.deserializer=com.ibm.panache.AllergyIntoleranceDeserializer
#
#
mp.messaging.incoming.fhirsvr_careplan.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_careplan.topic=fhirsvr_careplan
mp.messaging.incoming.fhirsvr_careplan.value.deserializer=com.ibm.panache.CarePlanDeserializer
#
#
mp.messaging.incoming.fhirsvr_condition.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_condition.topic=fhirsvr_condition
mp.messaging.incoming.fhirsvr_condition.value.deserializer=com.ibm.panache.ConditionDeserializer
#
#
mp.messaging.incoming.fhirsvr_clinicalimpression.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_clinicalimpression.topic=fhirsvr_clinicalimpression
mp.messaging.incoming.fhirsvr_clinicalimpression.value.deserializer=com.ibm.panache.ClinicalImpressionDeserializer
#
#
mp.messaging.incoming.fhirsvr_diagnosticreport.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_diagnosticreport.topic=fhirsvr_diagnosticreport
mp.messaging.incoming.fhirsvr_diagnosticreport.value.deserializer=com.ibm.panache.DiagnosticReportDeserializer
#
#
mp.messaging.incoming.fhirsvr_encounter.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_encounter.topic=fhirsvr_encounter
mp.messaging.incoming.fhirsvr_encounter.value.deserializer=com.ibm.panache.EncounterInfoDeserializer
#
#
mp.messaging.incoming.fhirsvr_goal.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_goal.topic=fhirsvr_goal
mp.messaging.incoming.fhirsvr_goal.value.deserializer=com.ibm.panache.GoalDeserializer
#
#
mp.messaging.incoming.fhirsvr_immunization.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_immunization.topic=fhirsvr_immunization
mp.messaging.incoming.fhirsvr_immunization.value.deserializer=com.ibm.panache.ImmunizationDeserializer
#
#
mp.messaging.incoming.fhirsvr_patient.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_patient.topic=fhirsvr_patient
mp.messaging.incoming.fhirsvr_patient.value.deserializer=com.ibm.panache.PatientInfoDeserializer
#
#
mp.messaging.incoming.fhirsvr_location.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_location.topic=fhirsvr_location
mp.messaging.incoming.fhirsvr_location.value.deserializer=com.ibm.panache.LocationDeserializer
#
#
mp.messaging.incoming.fhirsvr_observation.connector=smallrye-kafka
mp.messaging.incoming.fhirsvr_observation.topic=fhirsvr_observation
mp.messaging.incoming.fhirsvr_observation.value.deserializer=com.ibm.panache.ObservationDeserializer
#
#
mp.messaging.incoming.mctn_mms_ccda.connector=smallrye-kafka
mp.messaging.incoming.mctn_mms_ccda.topic=mctn_mms_ccda
mp.messaging.incoming.mctn_mms_ccda.value.deserializer=com.ibm.panache.CdaBundleDeserializer


# configure the MongoDB client for a replica set of two nodes
# quarkus.mongodb.connection-string = mongodb://localhost:27017/fhir
# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = fhir
quarkus.mongodb.auto-index-creation=true
quarkus.log.category."io.quarkus.mongodb.panache.runtime".level=DEBUG

# quarkus.mongodb.fhir.connection-string = mongodb://localhost:27017/fhir

quarkus.mongodb.connection-string = mongodb://mongodb-cdp.anthem-cdp-poc/fhir
quarkus.mongodb.tracing.enabled=true
#quarkus.mongodb.tls=true
#quarkus.mongodb.tls-insecure=true # only if TLS certificate cannot be validated